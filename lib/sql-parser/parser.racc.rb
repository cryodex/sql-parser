#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 365)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
   144,  -133,   141,   203,    28,    35,   171,   170,   248,   187,
   157,   156,   216,   162,   249,   188,   139,   140,    29,   242,
    31,    32,  -140,    33,    34,   243,    90,   111,   144,    93,
    94,    37,    37,    73,  -110,    50,   111,  -133,  -133,  -133,
   142,  -110,   121,    93,    94,   244,    77,    91,    81,    83,
    84,    85,    86,    87,    90,    95,   144,    98,  -140,  -140,
  -140,    73,   177,    50,   178,   179,   279,   280,   245,   246,
   247,    93,    94,   250,    77,    91,    81,    83,    84,    85,
    86,    87,    90,    95,   144,    98,     7,   251,   252,    73,
     8,    50,   253,   231,   256,    10,    11,   257,   264,    93,
    94,   265,    77,    91,    81,    83,    84,    85,    86,    87,
    90,    95,   266,    98,   268,   269,    40,    73,   270,    50,
   271,    50,   121,    42,    37,   277,   167,    50,   288,   289,
    77,    91,    81,    83,    84,    85,    86,    87,    28,    95,
   290,    98,    90,    53,   144,   231,   121,   293,    37,    73,
    49,    50,    29,    50,    31,    32,    12,    33,    34,    93,
    94,    19,    77,    91,    81,    83,    84,    85,    86,    87,
    90,    95,    20,    98,    22,    24,    40,    73,    25,    50,
    26,    19,    39,    19,    50,    19,   104,    93,    94,   105,
    77,    91,    81,    83,    84,    85,    86,    87,   106,    95,
   107,    98,    90,    53,   108,    37,   117,   118,   121,    73,
    49,    50,    40,   133,    10,   -93,   136,   146,   147,    93,
    94,   148,    77,    91,    81,    83,    84,    85,    86,    87,
   149,    95,   150,    98,   151,   152,  -162,   153,    90,    53,
   144,   154,   155,   158,   160,    73,    49,    50,   163,    19,
    19,   167,   169,   111,    19,    93,    94,    37,    77,    91,
    81,    83,    84,    85,    86,    87,    90,    95,   144,    98,
   183,    10,   212,    73,   217,    50,   219,    50,   167,    50,
   231,   232,   121,    93,    94,   234,    77,    91,    81,    83,
    84,    85,    86,    87,    90,    95,   180,    98,   136,   183,
   238,    73,   241,    50,   171,   nil,   nil,   nil,   nil,   nil,
   nil,    93,    94,   nil,    77,    91,    81,    83,    84,    85,
    86,    87,    90,    95,   144,    98,   nil,   nil,   nil,    73,
   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
    94,   nil,    77,    91,    81,    83,    84,    85,    86,    87,
    90,    95,   180,    98,   nil,   nil,   nil,    73,   nil,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,
    77,    91,    81,    83,    84,    85,    86,    87,    90,    95,
   144,    98,    10,   nil,   nil,    73,   nil,    50,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,    77,    91,
    81,    83,    84,    85,    86,    87,    90,    95,   180,    98,
   nil,   nil,   nil,    73,   nil,    50,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    93,    94,   nil,    77,    91,    81,    83,
    84,    85,    86,    87,    90,    95,   144,    98,    10,   nil,
   nil,    73,   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    93,    94,   nil,    77,    91,    81,    83,    84,    85,
    86,    87,    90,    95,    40,    98,   nil,   nil,   nil,    73,
   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
    94,   nil,    77,    91,    81,    83,    84,    85,    86,    87,
    90,    95,   nil,    98,   nil,   nil,    40,    73,    49,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,
    77,    91,    81,    83,    84,    85,    86,    87,   nil,    95,
   nil,    98,    90,    53,   144,   nil,   nil,   nil,   nil,    73,
    49,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
    94,   nil,    77,    91,    81,    83,    84,    85,    86,    87,
    90,    95,   nil,    98,   nil,   nil,    40,    73,   nil,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,
    77,    91,    81,    83,    84,    85,    86,    87,   nil,    95,
   nil,    98,    90,    53,   nil,   nil,   nil,   nil,    40,    73,
    49,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
    94,   nil,    77,    91,    81,    83,    84,    85,    86,    87,
   nil,    95,   nil,    98,    90,    53,   180,   nil,   nil,   nil,
   nil,    73,    49,    50,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    93,    94,   nil,    77,    91,    81,    83,    84,    85,
    86,    87,    90,    95,   144,    98,   nil,   nil,   nil,    73,
   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
    94,   nil,    77,    91,    81,    83,    84,    85,    86,    87,
    90,    95,   180,    98,   nil,   nil,   nil,    73,   nil,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,
    77,    91,    81,    83,    84,    85,    86,    87,    90,    95,
   144,    98,   nil,   nil,   nil,    73,   nil,    50,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,    77,    91,
    81,    83,    84,    85,    86,    87,    90,    95,   144,    98,
   nil,   nil,   nil,    73,    24,    50,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    93,    94,   nil,    77,    91,    81,    83,
    84,    85,    86,    87,    90,    95,   180,    98,   nil,   nil,
   nil,    73,   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    93,    94,   nil,    77,    91,    81,    83,    84,    85,
    86,    87,    90,    95,   180,    98,   nil,   nil,   nil,    73,
   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
    94,   nil,    77,    91,    81,    83,    84,    85,    86,    87,
    90,    95,   180,    98,   nil,   nil,   nil,    73,   nil,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,
    77,    91,    81,    83,    84,    85,    86,    87,    90,    95,
   180,    98,   nil,   nil,   nil,    73,   nil,    50,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,    77,    91,
    81,    83,    84,    85,    86,    87,    90,    95,   nil,    98,
   nil,   nil,    40,    73,   nil,    50,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    93,    94,   nil,    77,    91,    81,    83,
    84,    85,    86,    87,   nil,    95,   nil,    98,    90,    53,
   180,   nil,   nil,   nil,   nil,    73,    49,    50,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,    77,    91,
    81,    83,    84,    85,    86,    87,    90,    95,   180,    98,
   nil,   nil,   nil,    73,   nil,    50,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    93,    94,   nil,    77,    91,    81,    83,
    84,    85,    86,    87,    90,    95,   144,    98,   nil,   nil,
   nil,    73,   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    93,    94,   nil,    77,    91,    81,    83,    84,    85,
    86,    87,    90,    95,   144,    98,   nil,   nil,   nil,    73,
   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
    94,   nil,    77,    91,    81,    83,    84,    85,    86,    87,
    90,    95,   nil,    98,   nil,   nil,    40,    73,   nil,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,
    77,    91,    81,    83,    84,    85,    86,    87,   nil,    95,
   nil,    98,    90,    53,   144,   nil,   nil,   nil,   nil,    73,
    49,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,
    94,   nil,    77,    91,    81,    83,    84,    85,    86,    87,
    90,    95,   180,    98,   nil,   nil,   nil,    73,   nil,    50,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,
    77,    91,    81,    83,    84,    85,    86,    87,    90,    95,
   144,    98,   nil,   nil,   nil,    73,   nil,    50,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    93,    94,   nil,    77,    91,
    81,    83,    84,    85,    86,    87,    90,    95,   144,    98,
   nil,   nil,   nil,    73,   nil,    50,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    93,    94,   nil,    77,    91,    81,    83,
    84,    85,    86,    87,    90,    95,   nil,    98,   nil,   nil,
   nil,    73,   127,    50,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    93,    94,   nil,    77,    91,    81,    83,    84,    85,
    86,    87,   -31,    95,   nil,    98,   -31,  -119,   nil,   -31,
   -31,   nil,   -31,   122,   123,    28,   124,   125,   126,   119,
   nil,   nil,   nil,   128,   129,   130,   131,   132,   nil,    29,
   nil,    31,    32,   nil,    33,    34,   228,   229,  -119,  -119,
  -110,  -119,  -119,  -119,    27,    28,    37,  -110,  -119,  -119,
  -119,  -119,  -119,   nil,   nil,   nil,   nil,   nil,   nil,    29,
   nil,    31,    32,   nil,    33,    34 ]

racc_action_check = [
   140,   261,    67,   146,    38,    14,   114,   113,   210,   126,
    95,    95,   155,   100,   210,   126,    66,    66,    38,   204,
    38,    38,    65,    38,    38,   205,   140,    38,   142,   155,
   155,   146,    14,   140,   114,   140,   100,   261,   261,   261,
    67,   114,   113,   140,   140,   206,   140,   140,   140,   140,
   140,   140,   140,   140,   142,   140,   251,   140,    65,    65,
    65,   142,   122,   142,   122,   122,   260,   260,   207,   208,
   209,   142,   142,   215,   142,   142,   142,   142,   142,   142,
   142,   142,   251,   142,    68,   142,     0,   219,   220,   251,
     0,   251,   221,   222,   229,     0,     0,   231,   233,   251,
   251,   234,   251,   251,   251,   251,   251,   251,   251,   251,
    68,   251,   235,   251,   239,   240,    23,    68,   242,    68,
   248,   253,   255,    23,   256,   258,   263,   265,   272,   274,
    68,    68,    68,    68,    68,    68,    68,    68,   173,    68,
   275,    68,    23,    23,   277,   281,   282,   283,   290,    23,
    23,    23,   173,   293,   173,   173,     1,   173,   173,    23,
    23,     7,    23,    23,    23,    23,    23,    23,    23,    23,
   277,    23,     8,    23,     9,    10,   111,   277,    11,   277,
    12,    20,    22,    25,    27,    28,    29,   277,   277,    30,
   277,   277,   277,   277,   277,   277,   277,   277,    32,   277,
    33,   277,   111,   111,    34,    35,    41,    44,    46,   111,
   111,   111,    40,    49,    40,    50,    51,    78,    81,   111,
   111,    83,   111,   111,   111,   111,   111,   111,   111,   111,
    84,   111,    85,   111,    86,    87,    88,    90,    40,    40,
   152,    91,    92,    98,    99,    40,    40,    40,   102,   104,
   105,   110,   112,   116,   117,    40,    40,   119,    40,    40,
    40,    40,    40,    40,    40,    40,   152,    40,   151,    40,
   124,   133,   153,   152,   156,   152,   159,   160,   161,   162,
   166,   167,   168,   152,   152,   172,   152,   152,   152,   152,
   152,   152,   152,   152,   151,   152,   177,   152,   176,   178,
   181,   151,   187,   151,   200,   nil,   nil,   nil,   nil,   nil,
   nil,   151,   151,   nil,   151,   151,   151,   151,   151,   151,
   151,   151,   177,   151,   269,   151,   nil,   nil,   nil,   177,
   nil,   177,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   177,
   177,   nil,   177,   177,   177,   177,   177,   177,   177,   177,
   269,   177,   179,   177,   nil,   nil,   nil,   269,   nil,   269,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   269,   269,   nil,
   269,   269,   269,   269,   269,   269,   269,   269,   179,   269,
   180,   269,   180,   nil,   nil,   179,   nil,   179,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   179,   179,   nil,   179,   179,
   179,   179,   179,   179,   179,   179,   180,   179,   266,   179,
   nil,   nil,   nil,   180,   nil,   180,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   180,   180,   nil,   180,   180,   180,   180,
   180,   180,   180,   180,   266,   180,   183,   180,   183,   nil,
   nil,   266,   nil,   266,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   266,   266,   nil,   266,   266,   266,   266,   266,   266,
   266,   266,   183,   266,    53,   266,   nil,   nil,   nil,   183,
   nil,   183,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   183,
   183,   nil,   183,   183,   183,   183,   183,   183,   183,   183,
    53,   183,   nil,   183,   nil,   nil,   118,    53,    53,    53,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    53,    53,   nil,
    53,    53,    53,    53,    53,    53,    53,    53,   nil,    53,
   nil,    53,   118,   118,   150,   nil,   nil,   nil,   nil,   118,
   118,   118,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   118,
   118,   nil,   118,   118,   118,   118,   118,   118,   118,   118,
   150,   118,   nil,   118,   nil,   nil,   121,   150,   nil,   150,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   150,   150,   nil,
   150,   150,   150,   150,   150,   150,   150,   150,   nil,   150,
   nil,   150,   121,   121,   nil,   nil,   nil,   nil,   264,   121,
   121,   121,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121,
   121,   nil,   121,   121,   121,   121,   121,   121,   121,   121,
   nil,   121,   nil,   121,   264,   264,   123,   nil,   nil,   nil,
   nil,   264,   264,   264,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   264,   264,   nil,   264,   264,   264,   264,   264,   264,
   264,   264,   123,   264,   149,   264,   nil,   nil,   nil,   123,
   nil,   123,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   123,
   123,   nil,   123,   123,   123,   123,   123,   123,   123,   123,
   149,   123,   125,   123,   nil,   nil,   nil,   149,   nil,   149,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   149,   149,   nil,
   149,   149,   149,   149,   149,   149,   149,   149,   125,   149,
   148,   149,   nil,   nil,   nil,   125,   nil,   125,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   125,   125,   nil,   125,   125,
   125,   125,   125,   125,   125,   125,   148,   125,   147,   125,
   nil,   nil,   nil,   148,   147,   148,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   148,   148,   nil,   148,   148,   148,   148,
   148,   148,   148,   148,   147,   148,   127,   148,   nil,   nil,
   nil,   147,   nil,   147,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   147,   147,   nil,   147,   147,   147,   147,   147,   147,
   147,   147,   127,   147,   128,   147,   nil,   nil,   nil,   127,
   nil,   127,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   127,
   127,   nil,   127,   127,   127,   127,   127,   127,   127,   127,
   128,   127,   129,   127,   nil,   nil,   nil,   128,   nil,   128,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   128,   128,   nil,
   128,   128,   128,   128,   128,   128,   128,   128,   129,   128,
   130,   128,   nil,   nil,   nil,   129,   nil,   129,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   129,   129,   nil,   129,   129,
   129,   129,   129,   129,   129,   129,   130,   129,   nil,   129,
   nil,   nil,   228,   130,   nil,   130,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   130,   130,   nil,   130,   130,   130,   130,
   130,   130,   130,   130,   nil,   130,   nil,   130,   228,   228,
   131,   nil,   nil,   nil,   nil,   228,   228,   228,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   228,   228,   nil,   228,   228,
   228,   228,   228,   228,   228,   228,   131,   228,   132,   228,
   nil,   nil,   nil,   131,   nil,   131,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   131,   131,   nil,   131,   131,   131,   131,
   131,   131,   131,   131,   132,   131,   232,   131,   nil,   nil,
   nil,   132,   nil,   132,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   132,   132,   nil,   132,   132,   132,   132,   132,   132,
   132,   132,   232,   132,   144,   132,   nil,   nil,   nil,   232,
   nil,   232,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   232,
   232,   nil,   232,   232,   232,   232,   232,   232,   232,   232,
   144,   232,   nil,   232,   nil,   nil,   136,   144,   nil,   144,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   144,   144,   nil,
   144,   144,   144,   144,   144,   144,   144,   144,   nil,   144,
   nil,   144,   136,   136,   163,   nil,   nil,   nil,   nil,   136,
   136,   136,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   136,
   136,   nil,   136,   136,   136,   136,   136,   136,   136,   136,
   163,   136,   238,   136,   nil,   nil,   nil,   163,   nil,   163,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   163,   163,   nil,
   163,   163,   163,   163,   163,   163,   163,   163,   238,   163,
   139,   163,   nil,   nil,   nil,   238,   nil,   238,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   238,   238,   nil,   238,   238,
   238,   238,   238,   238,   238,   238,   139,   238,   141,   238,
   nil,   nil,   nil,   139,   nil,   139,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   139,   139,   nil,   139,   139,   139,   139,
   139,   139,   139,   139,   141,   139,   nil,   139,   nil,   nil,
   nil,   141,    48,   141,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   141,   141,   nil,   141,   141,   141,   141,   141,   141,
   141,   141,    45,   141,   nil,   141,    45,   138,   nil,    45,
    45,   nil,    45,    48,    48,   165,    48,    48,    48,    45,
   nil,   nil,   nil,    48,    48,    48,    48,    48,   nil,   165,
   nil,   165,   165,   nil,   165,   165,   165,   165,   138,   138,
    45,   138,   138,   138,    13,    13,    45,    45,   138,   138,
   138,   138,   138,   nil,   nil,   nil,   nil,   nil,   nil,    13,
   nil,    13,    13,   nil,    13,    13 ]

racc_action_pointer = [
    84,   156,   nil,   nil,   nil,   nil,   nil,   117,   165,   166,
   160,   165,   180,  1221,   -12,   nil,   nil,   nil,   nil,   nil,
   137,   nil,   180,   107,   nil,   139,   nil,   140,   141,   167,
   170,   nil,   176,   178,   182,   161,   nil,   nil,     0,   nil,
   203,   199,   nil,   nil,   203,  1182,   163,   nil,  1157,   204,
   159,   178,   nil,   455,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     6,   -36,   -14,    75,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   161,   nil,
   nil,   209,   nil,   212,   221,   223,   225,   226,   173,   nil,
   181,   206,   179,   nil,   nil,   -54,   nil,   nil,   176,   235,
     9,   nil,   243,   nil,   205,   206,   nil,   nil,   nil,   nil,
   220,   167,   242,    -3,    -4,   nil,   226,   210,   487,   213,
   nil,   547,    25,   607,   261,   663,   -27,   747,   775,   803,
   831,   891,   919,   260,   nil,   nil,  1007,   nil,  1182,  1091,
    -9,  1119,    19,   nil,   975,   nil,   -13,   719,   691,   635,
   515,   259,   231,   237,   nil,   -23,   210,   nil,   nil,   262,
   233,   247,   235,  1035,   nil,  1191,   246,   252,   237,   nil,
   nil,   nil,   257,   134,   nil,   nil,   260,   287,   290,   343,
   371,   262,   nil,   427,   nil,   nil,   nil,   260,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   294,   nil,   nil,   nil,     3,    15,    35,    58,    59,    60,
     4,   nil,   nil,   nil,   nil,    38,   nil,   nil,   nil,    78,
    78,    88,    59,   nil,   nil,   nil,   nil,   nil,   863,    85,
   nil,    62,   947,    68,    72,    74,   nil,   nil,  1063,   104,
   111,   nil,   108,   nil,   nil,   nil,   nil,   nil,    69,   nil,
   nil,    47,   nil,    77,   nil,    77,    80,   nil,   121,   nil,
    34,   -15,   nil,    95,   579,    83,   399,   nil,   nil,   315,
   nil,   nil,   118,   nil,   119,   136,   nil,   135,   nil,   nil,
   nil,   111,   101,   143,   nil,   nil,   nil,   nil,   nil,   nil,
   104,   nil,   nil,   109,   nil,   nil ]

racc_action_default = [
  -174,  -174,    -1,    -2,    -3,    -4,    -5,  -174,  -174,   -12,
   -22,  -174,  -174,  -174,   -37,   -38,   -39,   -41,   -42,   -93,
  -174,   -11,  -174,  -174,   -23,  -174,   296,  -174,  -174,  -174,
  -174,   -46,   -48,   -50,   -51,  -174,   -36,  -168,   -58,   -13,
  -174,   -32,   -24,   -25,   -27,  -119,   -30,   -79,  -174,  -174,
  -168,   -96,   -98,  -174,  -101,  -102,  -104,  -105,  -106,  -107,
  -108,  -109,  -117,  -118,  -122,  -123,  -126,  -129,  -174,  -131,
  -132,  -133,  -134,  -136,  -137,  -138,  -139,  -141,  -174,  -143,
  -146,  -174,  -148,  -174,  -174,  -174,  -174,  -174,  -155,  -156,
  -160,  -174,  -174,  -166,  -167,  -174,  -171,  -172,  -174,   -17,
   -58,    -8,  -174,   -43,  -174,  -174,   -47,   -49,   -52,   -35,
   -67,  -174,  -174,  -174,  -119,   -15,   -58,  -174,  -174,  -174,
   -29,  -174,  -174,  -174,  -174,  -174,  -174,  -174,  -174,  -174,
  -174,  -174,  -174,  -174,   -40,   -92,  -174,  -100,  -110,  -174,
  -174,  -174,  -174,  -130,  -174,  -140,  -174,   -22,  -174,  -174,
  -174,  -174,  -174,  -158,  -159,  -174,  -174,  -170,  -173,  -174,
  -174,   -67,  -174,  -174,   -44,  -174,   -77,  -174,   -59,   -14,
  -103,  -135,   -60,   -34,   -26,   -28,   -97,  -174,  -174,  -174,
  -174,  -174,  -119,  -174,   -83,   -84,   -89,  -174,   -91,  -111,
  -112,  -113,  -114,  -115,  -116,   -99,  -124,  -125,  -127,  -128,
  -174,  -142,  -144,  -145,  -174,  -174,  -174,  -174,  -174,  -174,
  -174,  -121,  -157,  -161,  -163,  -174,  -165,  -169,   -16,  -174,
  -174,   -20,   -77,    -7,    -9,   -45,   -53,   -54,  -174,  -174,
   -10,  -174,  -174,   -65,  -174,  -174,   -82,   -88,  -174,  -174,
   -87,   -90,  -174,  -149,  -150,  -151,  -152,  -153,  -174,  -154,
  -164,  -174,   -18,  -174,    -6,   -55,  -174,   -78,   -68,   -70,
   -74,   -72,   -73,   -67,  -174,  -174,  -174,   -81,   -85,  -174,
  -147,  -120,  -174,   -19,  -174,   -57,   -95,  -174,   -71,   -75,
   -76,   -77,   -66,   -61,   -63,   -64,   -80,   -86,   -21,   -56,
  -174,   -69,   -33,  -174,   -94,   -62 ]

racc_goto_table = [
    36,   102,    45,   166,   113,   181,    23,   186,   134,   189,
   190,   191,   192,   193,   194,   101,    43,   220,   230,   114,
   239,   109,   145,   110,   184,   259,   198,   199,   284,   196,
   197,   120,   138,   275,   283,   258,   278,    13,   176,   195,
   137,   210,    14,   215,   143,   201,   213,     1,   214,     2,
    38,     3,     4,     5,   222,    14,   295,     6,   100,   235,
    14,   237,     9,   103,    21,    41,   115,    99,   159,   218,
   291,   116,   233,   263,   254,   168,   135,   225,   236,   226,
   227,   274,   nil,   134,   nil,   161,   nil,   nil,   272,   nil,
   138,   nil,   nil,   145,   145,   145,   145,    45,   nil,   nil,
   138,   172,   nil,   nil,   nil,   175,   287,   nil,   nil,   nil,
   273,   174,   nil,   nil,   nil,   138,   nil,   nil,   nil,   nil,
   267,   nil,   nil,   200,   nil,   nil,   205,   206,   207,   208,
   209,   211,   202,   292,   221,   165,   102,   134,   nil,   164,
    14,   nil,   224,   204,   nil,   nil,   nil,   173,   286,   nil,
   223,   nil,    14,   nil,   nil,   nil,   281,   nil,   nil,   200,
   nil,   nil,   240,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   255,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   261,   138,   nil,   nil,
   nil,   262,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   221,   282,   nil,
   240,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   285,
   nil,   nil,   276,   138,   nil,   nil,   nil,   nil,   240,   nil,
   nil,   261,   nil,   nil,   nil,   nil,   262,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   285,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   294 ]

racc_goto_check = [
    28,    13,    14,    10,    29,    52,    18,    52,    17,    52,
    52,    52,    52,    52,    52,    12,    26,    24,    11,    14,
    25,    28,    66,     9,    54,    47,    67,    67,    45,    65,
    65,    28,    14,    43,    44,    46,    49,     7,    58,    59,
    60,    64,    33,    69,    70,    77,    82,     1,    83,     2,
     7,     3,     4,     5,    10,    33,    45,     6,     8,    52,
    33,    52,    15,    33,    16,    19,    20,    21,    22,    23,
    47,    30,    31,    32,    11,    29,    35,    39,    54,    40,
    41,    42,   nil,    17,   nil,     9,   nil,   nil,    25,   nil,
    14,   nil,   nil,    66,    66,    66,    66,    14,   nil,   nil,
    14,     9,   nil,   nil,   nil,    28,    25,   nil,   nil,   nil,
    24,    26,   nil,   nil,   nil,    14,   nil,   nil,   nil,   nil,
    52,   nil,   nil,    14,   nil,   nil,    14,    14,    14,    14,
    14,    14,    28,    11,    13,     7,    13,    17,   nil,    33,
    33,   nil,    14,    18,   nil,   nil,   nil,     7,    52,   nil,
    12,   nil,    33,   nil,   nil,   nil,    10,   nil,   nil,    14,
   nil,   nil,    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    29,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    13,    14,   nil,   nil,
   nil,    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,    29,   nil,
    14,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,
   nil,   nil,    28,    14,   nil,   nil,   nil,   nil,    14,   nil,
   nil,    13,   nil,   nil,   nil,   nil,    14,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    28 ]

racc_goto_pointer = [
   nil,    47,    49,    51,    52,    53,    57,    30,    31,   -15,
  -107,  -148,   -12,   -26,   -21,    62,    55,   -41,    -4,    42,
    25,    42,   -31,   -90,  -143,  -163,    -7,   nil,   -14,   -36,
    30,  -100,  -160,    35,   nil,    27,   nil,   nil,   nil,   -88,
   -86,   -85,  -175,  -223,  -231,  -237,  -197,  -207,   nil,  -224,
   nil,   nil,  -118,   nil,  -100,   nil,   nil,   nil,   -83,   -97,
   -13,   nil,   nil,   nil,  -111,  -110,   -46,  -115,   nil,  -112,
   -24,   nil,   nil,   nil,   nil,   nil,   nil,  -101,   nil,   nil,
   nil,   nil,  -109,  -107,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    71,   182,   112,   nil,    47,   nil,   nil,
   nil,    15,   nil,   nil,   nil,   nil,   nil,    44,    79,    46,
   nil,   nil,   nil,    80,    16,   185,    17,    18,    30,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   260,   nil,
    63,    57,    48,    58,   nil,    59,    60,    61,    51,    52,
    54,    55,    56,    62,   nil,    64,    65,    66,    67,    68,
    69,    70,    72,    74,    75,    76,    78,   nil,    82,    88,
    89,    92,   nil,   nil,    96,    97 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 69, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  7, 73, :_reduce_6,
  3, 76, :_reduce_7,
  1, 76, :_reduce_8,
  3, 80, :_reduce_9,
  6, 74, :_reduce_10,
  2, 71, :_reduce_11,
  0, 84, :_reduce_none,
  2, 84, :_reduce_none,
  3, 85, :_reduce_14,
  4, 83, :_reduce_15,
  5, 72, :_reduce_16,
  0, 90, :_reduce_none,
  3, 90, :_reduce_18,
  3, 92, :_reduce_19,
  1, 92, :_reduce_none,
  4, 91, :_reduce_21,
  0, 86, :_reduce_none,
  1, 86, :_reduce_none,
  1, 87, :_reduce_24,
  1, 87, :_reduce_25,
  3, 94, :_reduce_26,
  1, 94, :_reduce_none,
  3, 95, :_reduce_28,
  2, 95, :_reduce_29,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  0, 88, :_reduce_none,
  6, 88, :_reduce_33,
  2, 98, :_reduce_34,
  3, 89, :_reduce_35,
  2, 89, :_reduce_36,
  1, 89, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  1, 103, :_reduce_none,
  1, 102, :_reduce_none,
  1, 102, :_reduce_none,
  3, 104, :_reduce_43,
  4, 104, :_reduce_44,
  5, 105, :_reduce_45,
  1, 106, :_reduce_46,
  2, 106, :_reduce_47,
  1, 106, :_reduce_48,
  2, 106, :_reduce_49,
  1, 106, :_reduce_50,
  1, 106, :_reduce_51,
  2, 106, :_reduce_52,
  1, 107, :_reduce_none,
  1, 107, :_reduce_none,
  2, 108, :_reduce_55,
  4, 109, :_reduce_56,
  1, 110, :_reduce_none,
  0, 77, :_reduce_none,
  2, 77, :_reduce_59,
  0, 99, :_reduce_none,
  3, 99, :_reduce_61,
  3, 112, :_reduce_62,
  1, 112, :_reduce_none,
  1, 113, :_reduce_none,
  0, 100, :_reduce_none,
  2, 100, :_reduce_66,
  0, 78, :_reduce_none,
  3, 78, :_reduce_68,
  3, 114, :_reduce_69,
  1, 114, :_reduce_none,
  2, 115, :_reduce_71,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  0, 117, :_reduce_74,
  1, 117, :_reduce_75,
  1, 117, :_reduce_76,
  0, 79, :_reduce_none,
  2, 79, :_reduce_78,
  1, 118, :_reduce_none,
  6, 119, :_reduce_80,
  5, 119, :_reduce_81,
  4, 121, :_reduce_82,
  3, 121, :_reduce_83,
  1, 122, :_reduce_none,
  3, 122, :_reduce_85,
  3, 93, :_reduce_86,
  1, 93, :_reduce_none,
  4, 123, :_reduce_88,
  3, 123, :_reduce_89,
  4, 124, :_reduce_90,
  3, 124, :_reduce_91,
  2, 125, :_reduce_92,
  1, 101, :_reduce_93,
  3, 111, :_reduce_94,
  1, 111, :_reduce_none,
  1, 97, :_reduce_none,
  3, 97, :_reduce_97,
  1, 126, :_reduce_none,
  3, 126, :_reduce_99,
  2, 127, :_reduce_100,
  1, 127, :_reduce_none,
  1, 128, :_reduce_none,
  3, 128, :_reduce_103,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  3, 130, :_reduce_111,
  3, 130, :_reduce_112,
  3, 130, :_reduce_113,
  3, 130, :_reduce_114,
  3, 130, :_reduce_115,
  3, 130, :_reduce_116,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 131, :_reduce_none,
  3, 132, :_reduce_120,
  1, 132, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  3, 133, :_reduce_124,
  3, 133, :_reduce_125,
  1, 133, :_reduce_none,
  3, 135, :_reduce_127,
  3, 135, :_reduce_128,
  1, 135, :_reduce_none,
  2, 136, :_reduce_130,
  1, 136, :_reduce_none,
  1, 138, :_reduce_none,
  1, 138, :_reduce_none,
  1, 138, :_reduce_none,
  3, 138, :_reduce_135,
  1, 138, :_reduce_136,
  1, 139, :_reduce_none,
  1, 139, :_reduce_none,
  1, 141, :_reduce_none,
  1, 141, :_reduce_none,
  1, 142, :_reduce_141,
  3, 81, :_reduce_142,
  1, 81, :_reduce_none,
  1, 145, :_reduce_none,
  1, 145, :_reduce_145,
  1, 144, :_reduce_none,
  5, 140, :_reduce_147,
  1, 140, :_reduce_none,
  4, 146, :_reduce_149,
  4, 146, :_reduce_150,
  4, 146, :_reduce_151,
  4, 146, :_reduce_152,
  4, 146, :_reduce_153,
  4, 146, :_reduce_154,
  1, 143, :_reduce_none,
  1, 143, :_reduce_none,
  3, 147, :_reduce_157,
  2, 147, :_reduce_158,
  2, 147, :_reduce_159,
  1, 147, :_reduce_160,
  3, 148, :_reduce_161,
  1, 149, :_reduce_none,
  1, 150, :_reduce_none,
  2, 151, :_reduce_164,
  1, 151, :_reduce_165,
  1, 137, :_reduce_166,
  1, 137, :_reduce_167,
  1, 96, :_reduce_168,
  3, 134, :_reduce_169,
  2, 134, :_reduce_170,
  1, 134, :_reduce_none,
  1, 152, :_reduce_none,
  2, 153, :_reduce_173 ]

racc_reduce_n = 174

racc_shift_n = 296

racc_token_table = {
  false => 0,
  :error => 1,
  :UPDATE => 2,
  :SET => 3,
  :comma => 4,
  :equals_operator => 5,
  :DELETE => 6,
  :FROM => 7,
  :FOR => 8,
  :left_paren => 9,
  :right_paren => 10,
  :SELECT => 11,
  :INSERT => 12,
  :INTO => 13,
  :VALUES => 14,
  :DISTINCT => 15,
  :asterisk => 16,
  :AS => 17,
  :CROSS => 18,
  :JOIN => 19,
  :INNER => 20,
  :LEFT => 21,
  :OUTER => 22,
  :RIGHT => 23,
  :FULL => 24,
  :ON => 25,
  :USING => 26,
  :WHERE => 27,
  :GROUP => 28,
  :BY => 29,
  :HAVING => 30,
  :ORDER => 31,
  :ASC => 32,
  :DESC => 33,
  :LIMIT => 34,
  :unsigned_integer => 35,
  :NOT => 36,
  :BETWEEN => 37,
  :AND => 38,
  :IN => 39,
  :LIKE => 40,
  :IS => 41,
  :NULL => 42,
  :EXISTS => 43,
  :identifier => 44,
  :OR => 45,
  :not_equals_operator => 46,
  :less_than_operator => 47,
  :greater_than_operator => 48,
  :less_than_or_equals_operator => 49,
  :greater_than_or_equals_operator => 50,
  :value_expresson => 51,
  :plus_sign => 52,
  :minus_sign => 53,
  :solidus => 54,
  :CURRENT_USER => 55,
  :period => 56,
  :COUNT => 57,
  :AVG => 58,
  :MAX => 59,
  :MIN => 60,
  :SUM => 61,
  :COALESCE => 62,
  :E => 63,
  :quote => 64,
  :character_string_literal => 65,
  :DATE => 66,
  :date_string => 67 }

racc_nt_base = 68

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UPDATE",
  "SET",
  "comma",
  "equals_operator",
  "DELETE",
  "FROM",
  "FOR",
  "left_paren",
  "right_paren",
  "SELECT",
  "INSERT",
  "INTO",
  "VALUES",
  "DISTINCT",
  "asterisk",
  "AS",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "ASC",
  "DESC",
  "LIMIT",
  "unsigned_integer",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "value_expresson",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "COALESCE",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "update_statement",
  "delete_statement",
  "table_reference",
  "assignment_list",
  "where_clause",
  "order_by_clause",
  "limit_clause",
  "assignment",
  "column_reference",
  "value_expression",
  "query_expression",
  "maybe_for_update",
  "subquery",
  "distinct",
  "select_list",
  "table_expression",
  "table_factor",
  "column_list",
  "value_list",
  "in_column_list",
  "in_value_list",
  "select_sublist",
  "derived_column",
  "column_name",
  "search_condition",
  "from_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "value_expression_list",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "qualifier",
  "column_or_star",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 15)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::Update.new(val[1], val[3], val[4], val[5], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_8(val, _values, result)
     result = Array(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_9(val, _values, result)
     result = SQLParser::Statement::Assignment.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::Delete.new(val[2], val[3], val[4], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.racc', 38)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_19(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_26(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3], val[4], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_45(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_62(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 67 omitted

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_69(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_71(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 72 omitted

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 164)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.racc', 168)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Limit.new(val[1]) 
    result
  end
.,.,

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 176)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 179)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 180)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 84 omitted

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_86(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 87 omitted

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 199)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_92(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_93(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 209)
  def _reduce_94(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 95 omitted

# reduce 96 omitted

module_eval(<<'.,.,', 'parser.racc', 215)
  def _reduce_97(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 98 omitted

module_eval(<<'.,.,', 'parser.racc', 219)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 222)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 101 omitted

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.racc', 227)
  def _reduce_103(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 104 omitted

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_112(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 243)
  def _reduce_115(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 244)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'parser.racc', 254)
  def _reduce_120(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

module_eval(<<'.,.,', 'parser.racc', 262)
  def _reduce_124(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 263)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 126 omitted

module_eval(<<'.,.,', 'parser.racc', 267)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 129 omitted

module_eval(<<'.,.,', 'parser.racc', 272)
  def _reduce_130(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

module_eval(<<'.,.,', 'parser.racc', 279)
  def _reduce_135(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Null.new 
    result
  end
.,.,

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

module_eval(<<'.,.,', 'parser.racc', 291)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 294)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 143 omitted

# reduce 144 omitted

module_eval(<<'.,.,', 'parser.racc', 299)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

# reduce 146 omitted

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 148 omitted

module_eval(<<'.,.,', 'parser.racc', 309)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 310)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 311)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 312)
  def _reduce_152(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 313)
  def _reduce_153(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 314)
  def _reduce_154(val, _values, result)
     result = SQLParser::Statement::Coalesce.new(val[2]) 
    result
  end
.,.,

# reduce 155 omitted

# reduce 156 omitted

module_eval(<<'.,.,', 'parser.racc', 322)
  def _reduce_157(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 323)
  def _reduce_158(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 324)
  def _reduce_159(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 325)
  def _reduce_160(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 328)
  def _reduce_161(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 162 omitted

# reduce 163 omitted

module_eval(<<'.,.,', 'parser.racc', 337)
  def _reduce_164(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 338)
  def _reduce_165(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 341)
  def _reduce_166(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 342)
  def _reduce_167(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 346)
  def _reduce_168(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 350)
  def _reduce_169(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 351)
  def _reduce_170(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 171 omitted

# reduce 172 omitted

module_eval(<<'.,.,', 'parser.racc', 358)
  def _reduce_173(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
