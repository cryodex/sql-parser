#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 342)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    44,  -128,    91,   145,    91,     7,   215,    96,   166,    70,
   226,   138,     8,   139,   126,   140,   227,    44,   141,   217,
   220,   218,   219,   103,    97,    67,    99,   100,   152,   101,
   102,  -128,  -128,  -128,    44,   149,    18,   220,    67,   185,
    67,    71,   144,    47,    48,    67,    32,    45,    36,    38,
    39,    40,    41,    18,    49,    60,    52,    47,    48,    44,
    47,    48,    28,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    14,    52,    96,    68,    69,    47,    48,   135,
    32,    45,    36,    38,    39,    40,    41,   165,    49,    44,
    52,    97,    28,    99,   100,    18,   101,   102,   208,   209,
    65,     8,    47,    48,   137,    32,    45,    36,    38,    39,
    40,    41,   167,    49,    44,    52,   168,    28,    85,    84,
   130,   131,    67,   169,   170,    18,     8,   171,    95,   173,
   174,    44,    47,    48,   220,    32,    45,    36,    38,    39,
    40,    41,   128,    49,    60,    52,    60,   180,    44,   181,
    18,   220,   127,   185,   122,   197,   200,    47,    48,    67,
    32,    45,    36,    38,    39,    40,    41,    18,    49,   114,
    52,   203,   204,    44,    47,    48,   145,    32,    45,    36,
    38,    39,    40,    41,    18,    49,    67,    52,    60,    18,
    44,    47,    48,    28,    32,    45,    36,    38,    39,    40,
    41,   152,    49,   214,    52,   106,   114,    44,   149,    18,
    28,    86,    83,    82,   222,    81,    47,    48,  -147,    32,
    45,    36,    38,    39,    40,    41,    18,    49,    80,    52,
    79,    78,    44,    47,    48,   145,    32,    45,    36,    38,
    39,    40,    41,    18,    49,    77,    52,    76,    75,    44,
    47,    48,    28,    32,    45,    36,    38,    39,    40,    41,
   152,    49,     8,    52,   -84,    64,    63,   149,    18,   237,
   185,   238,   200,    60,    44,    47,    48,    28,    32,    45,
    36,    38,    39,    40,    41,    18,    49,   222,    52,    54,
    53,   242,    47,    48,    12,    32,    45,    36,    38,    39,
    40,    41,   244,    49,    44,    52,   185,   145,    67,    18,
    18,   249,    11,   251,   252,   253,     8,    47,    48,     9,
    32,    45,    36,    38,    39,    40,    41,    67,    49,   nil,
    52,    44,   152,   nil,    28,   nil,   nil,   nil,   nil,   149,
    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,    28,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,    45,    36,
    38,    39,    40,    41,   nil,    49,    44,    52,   nil,   220,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,    44,    52,   nil,   220,   nil,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,    44,    52,   nil,   220,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,   220,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,   nil,    49,    44,    52,   nil,   220,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,    44,    52,   nil,   220,   nil,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,    44,    52,   nil,    28,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,   220,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,   nil,    49,    44,    52,   nil,   220,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,    44,    52,   nil,    28,   nil,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,    44,    52,   nil,    28,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,    28,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,   nil,    49,    44,    52,   nil,    28,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   116,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,    44,    52,   nil,   145,   nil,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,    44,    52,   nil,    28,   nil,   nil,   nil,   nil,   149,
    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,    28,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,   nil,    49,    44,    52,   nil,   145,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,   152,    52,    44,   nil,   nil,    28,
   nil,   149,    18,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,    44,    52,   nil,    28,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,    44,    47,
    48,    28,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,   nil,    52,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,    44,    47,    48,   145,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,   nil,   nil,
   nil,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,   152,    49,   nil,    52,   nil,   nil,   nil,   149,    18,
   nil,   191,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,   nil,    49,   nil,    52,
   186,   187,   nil,   188,   189,   190,   nil,   nil,   nil,   nil,
   192,   193,   194,   195,   196,    96,   nil,   nil,   nil,    94,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    95,   nil,   nil,
   nil,   nil,    97,   nil,    99,   100,   nil,   101,   102 ]

racc_action_check = [
   106,    20,    54,   106,   128,     0,   183,   107,   117,    22,
   190,    98,     0,   100,    83,   101,   190,   249,   102,   186,
   249,   186,   186,    56,   107,   103,   107,   107,   106,   107,
   107,    20,    20,    20,   242,   106,   106,   242,    54,   183,
   128,    22,   105,   106,   106,    56,   106,   106,   106,   106,
   106,   106,   106,   249,   106,    96,   106,    83,    83,     8,
   249,   249,     8,   249,   249,   249,   249,   249,   249,   249,
   242,   249,     8,   249,   178,    21,    21,   242,   242,    95,
   242,   242,   242,   242,   242,   242,   242,   116,   242,   222,
   242,   178,   222,   178,   178,     8,   178,   178,   178,   178,
    17,   222,     8,     8,    97,     8,     8,     8,     8,     8,
     8,     8,   118,     8,   220,     8,   119,   220,    49,    49,
    89,    89,    17,   120,   121,   222,   220,   125,    93,   133,
   134,   219,   222,   222,   219,   222,   222,   222,   222,   222,
   222,   222,    87,   222,   137,   222,   138,   143,   217,   144,
   220,   217,    84,   146,    81,   149,   150,   220,   220,    75,
   220,   220,   220,   220,   220,   220,   220,   219,   220,    74,
   220,   175,   176,   208,   219,   219,   208,   219,   219,   219,
   219,   219,   219,   219,   217,   219,    65,   219,    63,   181,
   204,   217,   217,   204,   217,   217,   217,   217,   217,   217,
   217,   208,   217,   182,   217,    62,   184,    94,   208,   208,
    94,    52,    46,    45,   188,    44,   208,   208,    42,   208,
   208,   208,   208,   208,   208,   208,   204,   208,    41,   208,
    40,    39,   200,   204,   204,   200,   204,   204,   204,   204,
   204,   204,   204,    94,   204,    38,   204,    36,    33,   135,
    94,    94,   135,    94,    94,    94,    94,    94,    94,    94,
   200,    94,   197,    94,    18,    16,    13,   200,   200,   209,
   210,   211,   216,    12,    80,   200,   200,    80,   200,   200,
   200,   200,   200,   200,   200,   135,   200,   218,   200,    11,
     9,   221,   135,   135,     7,   135,   135,   135,   135,   135,
   135,   135,   226,   135,   145,   135,   236,   145,   237,   238,
    80,   239,     5,   243,   245,   246,   145,    80,    80,     1,
    80,    80,    80,    80,    80,    80,    80,   253,    80,   nil,
    80,    23,   145,   nil,    23,   nil,   nil,   nil,   nil,   145,
   145,   nil,   nil,   nil,   nil,   nil,   nil,   145,   145,   nil,
   145,   145,   145,   145,   145,   145,   145,   nil,   145,    28,
   145,   nil,    28,   nil,   nil,   nil,   nil,    23,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,    23,    23,
    23,    23,    23,    23,   nil,    23,   196,    23,   nil,   196,
   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,
   nil,   nil,    28,    28,   nil,    28,    28,    28,    28,    28,
    28,    28,   nil,    28,   195,    28,   nil,   195,   nil,   nil,
   nil,   nil,   196,   nil,   nil,   nil,   nil,   nil,   nil,   196,
   196,   nil,   196,   196,   196,   196,   196,   196,   196,   nil,
   196,   194,   196,   nil,   194,   nil,   nil,   nil,   nil,   nil,
   195,   nil,   nil,   nil,   nil,   nil,   nil,   195,   195,   nil,
   195,   195,   195,   195,   195,   195,   195,   nil,   195,   193,
   195,   nil,   193,   nil,   nil,   nil,   nil,   194,   nil,   nil,
   nil,   nil,   nil,   nil,   194,   194,   nil,   194,   194,   194,
   194,   194,   194,   194,   nil,   194,   192,   194,   nil,   192,
   nil,   nil,   nil,   nil,   nil,   193,   nil,   nil,   nil,   nil,
   nil,   nil,   193,   193,   nil,   193,   193,   193,   193,   193,
   193,   193,   nil,   193,   191,   193,   nil,   191,   nil,   nil,
   nil,   nil,   192,   nil,   nil,   nil,   nil,   nil,   nil,   192,
   192,   nil,   192,   192,   192,   192,   192,   192,   192,   nil,
   192,    79,   192,   nil,    79,   nil,   nil,   nil,   nil,   nil,
   191,   nil,   nil,   nil,   nil,   nil,   nil,   191,   191,   nil,
   191,   191,   191,   191,   191,   191,   191,   nil,   191,   189,
   191,   nil,   189,   nil,   nil,   nil,   nil,    79,   nil,   nil,
   nil,   nil,   nil,   nil,    79,    79,   nil,    79,    79,    79,
    79,    79,    79,    79,   nil,    79,   187,    79,   nil,   187,
   nil,   nil,   nil,   nil,   nil,   189,   nil,   nil,   nil,   nil,
   nil,   nil,   189,   189,   nil,   189,   189,   189,   189,   189,
   189,   189,   nil,   189,    78,   189,   nil,    78,   nil,   nil,
   nil,   nil,   187,   nil,   nil,   nil,   nil,   nil,   nil,   187,
   187,   nil,   187,   187,   187,   187,   187,   187,   187,   nil,
   187,    77,   187,   nil,    77,   nil,   nil,   nil,   nil,   nil,
    78,   nil,   nil,   nil,   nil,   nil,   nil,    78,    78,   nil,
    78,    78,    78,    78,    78,    78,    78,   nil,    78,    69,
    78,   nil,    69,   nil,   nil,   nil,   nil,    77,   nil,   nil,
   nil,   nil,   nil,   nil,    77,    77,   nil,    77,    77,    77,
    77,    77,    77,    77,   nil,    77,    76,    77,   nil,    76,
   nil,   nil,   nil,   nil,   nil,    69,   nil,   nil,   nil,    76,
   nil,   nil,    69,    69,   nil,    69,    69,    69,    69,    69,
    69,    69,   nil,    69,   152,    69,   nil,   152,   nil,   nil,
   nil,   nil,    76,   nil,   nil,   nil,   nil,   nil,   nil,    76,
    76,   nil,    76,    76,    76,    76,    76,    76,    76,   nil,
    76,   174,    76,   nil,   174,   nil,   nil,   nil,   nil,   152,
   152,   nil,   nil,   nil,   nil,   nil,   nil,   152,   152,   nil,
   152,   152,   152,   152,   152,   152,   152,   nil,   152,    71,
   152,   nil,    71,   nil,   nil,   nil,   nil,   174,   nil,   nil,
   nil,   nil,   nil,   nil,   174,   174,   nil,   174,   174,   174,
   174,   174,   174,   174,   nil,   174,   180,   174,   nil,   180,
   nil,   nil,   nil,   nil,   nil,    71,   nil,   nil,   nil,   nil,
   nil,   nil,    71,    71,   nil,    71,    71,    71,    71,    71,
    71,    71,   nil,    71,   180,    71,    64,   nil,   nil,    64,
   nil,   180,   180,   nil,   nil,   nil,   nil,   nil,   nil,   180,
   180,   nil,   180,   180,   180,   180,   180,   180,   180,   nil,
   180,    70,   180,   nil,    70,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    64,   nil,   nil,   nil,   nil,   nil,    68,    64,
    64,    68,    64,    64,    64,    64,    64,    64,    64,   nil,
    64,   nil,    64,   nil,   nil,   nil,   nil,    70,   nil,   nil,
   nil,   nil,   nil,   185,    70,    70,   185,    70,    70,    70,
    70,    70,    70,    70,    68,    70,   nil,    70,   nil,   nil,
   nil,    68,    68,   nil,    68,    68,    68,    68,    68,    68,
    68,   185,    68,   nil,    68,   nil,   nil,   nil,   185,   185,
   nil,   148,   nil,   nil,   nil,   nil,   185,   185,   nil,   185,
   185,   185,   185,   185,   185,   185,   nil,   185,   nil,   185,
   148,   148,   nil,   148,   148,   148,   nil,   nil,   nil,   nil,
   148,   148,   148,   148,   148,    55,   nil,   nil,   nil,    55,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    55,   nil,   nil,
   nil,   nil,    55,   nil,    55,    55,   nil,    55,    55 ]

racc_action_pointer = [
    -5,   319,   nil,   nil,   nil,   310,   nil,   283,    54,   290,
   nil,   286,   232,   246,   nil,   nil,   261,    81,   212,   nil,
   -17,    27,    -9,   326,   nil,   nil,   nil,   nil,   354,   nil,
   nil,   nil,   nil,   196,   nil,   nil,   239,   nil,   237,   223,
   222,   220,   160,   nil,   163,   208,   154,   nil,   nil,    59,
   nil,   nil,   149,   nil,    -3,   991,     4,   nil,   nil,   nil,
   nil,   nil,   175,   147,   851,   145,   nil,   nil,   893,   684,
   876,   794,   nil,   nil,   160,   118,   711,   656,   629,   546,
   269,   149,   nil,     9,    93,   nil,   nil,   138,   nil,   114,
   nil,   nil,   nil,   112,   202,    71,    14,    82,   -11,   nil,
   -12,   -10,    -7,   -16,   nil,    11,    -5,     3,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    78,    -1,   103,   107,
   114,   115,   nil,   nil,   nil,   122,   nil,   nil,    -1,   nil,
   nil,   nil,   nil,   120,   126,   244,   nil,   103,   105,   nil,
   nil,   nil,   nil,   115,   146,   299,   111,   nil,   947,   147,
   121,   nil,   739,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   766,   162,   168,   nil,    70,   nil,
   821,   148,   194,    -3,   197,   918,   -15,   601,   206,   574,
   -23,   519,   491,   464,   436,   409,   381,   245,   nil,   nil,
   227,   nil,   nil,   nil,   185,   nil,   nil,   nil,   168,   261,
   228,   267,   nil,   nil,   nil,   nil,   237,   143,   279,   126,
   109,   256,    84,   nil,   nil,   nil,   263,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   264,   267,   268,   276,
   nil,   nil,    29,   304,   nil,   305,   311,   nil,   nil,    12,
   nil,   nil,   nil,   286,   nil,   nil ]

racc_action_default = [
  -159,  -159,    -1,    -2,    -3,    -5,   -16,  -159,  -159,  -159,
    -4,  -159,  -159,   -29,   -30,   -31,   -33,   -36,  -153,  -111,
  -112,  -115,  -118,  -159,  -120,  -121,  -122,  -123,  -159,  -125,
  -126,  -127,  -129,  -159,  -131,  -132,  -159,  -134,  -159,  -159,
  -159,  -159,  -140,  -141,  -145,  -159,  -159,  -151,  -152,  -159,
  -156,  -157,  -159,   256,  -159,  -159,   -41,   -42,   -44,   -45,
   -84,   -28,   -61,  -159,  -159,  -159,   -35,  -153,  -159,  -159,
  -159,  -159,  -119,  -128,  -159,  -159,  -159,  -159,  -159,  -159,
  -159,  -143,  -144,  -159,  -159,  -155,  -158,    -6,    -8,   -12,
   -10,   -11,   -17,  -159,  -159,  -159,  -159,  -159,  -159,   -49,
   -51,   -53,   -54,  -159,   -40,   -63,  -159,   -38,   -32,   -34,
  -113,  -114,  -116,  -117,  -124,  -130,  -159,  -159,  -159,  -159,
  -159,  -159,  -142,  -146,  -148,  -159,  -150,  -154,  -159,    -9,
   -13,   -14,   -18,  -159,   -26,  -159,   -46,  -159,  -159,   -50,
   -52,   -55,   -39,   -68,  -159,  -159,   -62,   -70,  -159,  -159,
   -87,   -89,  -159,   -92,   -93,   -94,   -96,   -97,   -98,   -99,
  -100,  -101,  -108,  -109,  -110,  -133,  -135,  -136,  -137,  -138,
  -139,  -149,    -7,   -24,  -159,  -159,   -78,   -47,  -159,   -37,
  -159,  -159,  -159,  -159,  -110,  -159,  -159,  -159,  -159,  -159,
  -159,  -159,  -159,  -159,  -159,  -159,  -159,  -159,   -43,   -83,
  -159,   -91,   -25,   -27,  -159,   -48,   -56,   -57,  -159,  -159,
   -69,   -64,   -66,   -67,   -15,   -95,   -88,  -159,  -159,  -159,
  -159,  -159,  -159,   -74,   -75,   -80,  -159,   -82,  -102,  -103,
  -104,  -105,  -106,  -107,   -90,   -77,   -58,  -159,  -159,  -159,
   -73,   -79,  -159,  -159,   -81,  -159,   -60,   -86,   -65,  -159,
   -72,   -76,   -59,  -159,   -71,   -85 ]

racc_goto_table = [
    66,    17,   146,    55,   133,    56,   175,    88,   198,   213,
   212,    92,    15,   223,    73,   112,   113,   110,   111,   179,
    13,    74,    61,   221,   105,   225,   143,   228,   229,   230,
   231,   232,   233,    62,    93,   199,   205,    90,   206,   104,
   207,   183,   129,   240,   245,   246,   211,   198,   109,   132,
     1,    87,    10,   239,   107,   241,    56,    17,   115,    73,
    73,    73,    73,     5,   216,   234,   213,   248,   108,   117,
   118,   119,   120,   121,   201,   235,   210,   198,   250,     4,
     3,   172,     2,   125,   202,   254,   142,   134,    72,   136,
   123,   124,   nil,   243,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   236,   nil,   nil,   nil,   nil,   nil,
   nil,    90,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   176,   178,
   177,    56,   nil,   nil,   nil,   nil,   nil,   nil,   184,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   134,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   176,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    74,   nil,   176,   nil,   nil,   nil,   nil,
   247,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   255 ]

racc_goto_check = [
    11,    21,    41,    14,    24,    32,    25,     8,    12,    46,
    45,    15,    28,    51,    63,    64,    64,    62,    62,    31,
    26,    21,    27,    49,    19,    49,    30,    49,    49,    49,
    49,    49,    49,    23,    16,    34,    38,    11,    39,    11,
    40,    41,    10,    51,    42,    43,    44,    12,    11,    15,
     1,     7,     6,    49,    14,    49,    32,    21,    11,    63,
    63,    63,    63,     5,    55,    56,    46,    45,    28,    21,
    21,    21,    21,    21,    57,    25,    41,    12,    49,     4,
     3,     8,     2,    66,    24,    49,    11,    21,    67,    32,
    78,    79,   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    41,   nil,   nil,   nil,   nil,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,    14,
    32,    32,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,    21,   nil,   nil,   nil,   nil,
    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    11 ]

racc_goto_pointer = [
   nil,    50,    82,    80,    79,    63,    47,    -3,   -47,   nil,
   -47,   -17,  -141,   nil,    -9,   -44,   -21,   nil,   nil,   -38,
   nil,    -7,   nil,    20,   -90,  -129,    12,     9,     4,   nil,
   -79,  -124,    -7,   nil,  -114,   nil,   nil,   nil,  -142,  -140,
  -138,  -104,  -193,  -192,  -135,  -171,  -172,   nil,   nil,  -164,
   nil,  -175,   nil,   nil,   nil,  -121,  -135,   -78,   nil,   nil,
   nil,   nil,   -51,    -9,   -55,   nil,     0,    65,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,     8,
   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   182,   nil,   nil,   nil,    89,
   nil,    34,   147,     6,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   164,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,
   nil,   nil,    35,    57,   224,    58,    59,    98,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    26,   163,   157,   148,
   158,   nil,   159,   160,   161,   150,   151,   153,   154,   155,
   156,   162,    19,    20,    21,    22,    23,    24,    25,    27,
    29,    30,    31,    33,    37,    42,    43,    46,   nil,   nil,
    50,    51 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 64, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  2, 66, :_reduce_4,
  0, 69, :_reduce_none,
  3, 69, :_reduce_6,
  3, 70, :_reduce_7,
  1, 70, :_reduce_none,
  2, 71, :_reduce_9,
  1, 72, :_reduce_none,
  1, 72, :_reduce_11,
  0, 73, :_reduce_12,
  1, 73, :_reduce_13,
  1, 73, :_reduce_14,
  3, 75, :_reduce_15,
  1, 68, :_reduce_none,
  4, 67, :_reduce_17,
  5, 67, :_reduce_18,
  5, 80, :_reduce_19,
  3, 83, :_reduce_20,
  3, 81, :_reduce_none,
  1, 81, :_reduce_none,
  3, 85, :_reduce_23,
  3, 79, :_reduce_24,
  3, 87, :_reduce_25,
  1, 87, :_reduce_none,
  4, 78, :_reduce_27,
  3, 76, :_reduce_28,
  2, 76, :_reduce_29,
  1, 89, :_reduce_30,
  1, 89, :_reduce_31,
  3, 91, :_reduce_32,
  1, 91, :_reduce_none,
  3, 92, :_reduce_34,
  2, 92, :_reduce_35,
  1, 92, :_reduce_none,
  4, 90, :_reduce_37,
  2, 86, :_reduce_38,
  3, 77, :_reduce_39,
  2, 77, :_reduce_40,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 97, :_reduce_none,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  3, 98, :_reduce_46,
  4, 98, :_reduce_47,
  5, 99, :_reduce_48,
  1, 100, :_reduce_49,
  2, 100, :_reduce_50,
  1, 100, :_reduce_51,
  2, 100, :_reduce_52,
  1, 100, :_reduce_53,
  1, 100, :_reduce_54,
  2, 100, :_reduce_55,
  1, 101, :_reduce_none,
  1, 101, :_reduce_none,
  2, 102, :_reduce_58,
  4, 103, :_reduce_59,
  1, 105, :_reduce_none,
  0, 82, :_reduce_none,
  2, 82, :_reduce_62,
  0, 93, :_reduce_none,
  3, 93, :_reduce_64,
  3, 107, :_reduce_65,
  1, 107, :_reduce_none,
  1, 108, :_reduce_none,
  0, 94, :_reduce_none,
  2, 94, :_reduce_69,
  1, 110, :_reduce_none,
  6, 111, :_reduce_71,
  5, 111, :_reduce_72,
  4, 113, :_reduce_73,
  3, 113, :_reduce_74,
  1, 114, :_reduce_none,
  3, 114, :_reduce_76,
  3, 88, :_reduce_77,
  1, 88, :_reduce_none,
  4, 115, :_reduce_79,
  3, 115, :_reduce_80,
  4, 116, :_reduce_81,
  3, 116, :_reduce_82,
  2, 117, :_reduce_83,
  1, 95, :_reduce_84,
  3, 106, :_reduce_85,
  1, 106, :_reduce_none,
  1, 104, :_reduce_none,
  3, 104, :_reduce_88,
  1, 118, :_reduce_none,
  3, 118, :_reduce_90,
  2, 119, :_reduce_91,
  1, 119, :_reduce_none,
  1, 120, :_reduce_none,
  1, 121, :_reduce_none,
  3, 121, :_reduce_95,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  1, 122, :_reduce_none,
  3, 123, :_reduce_102,
  3, 123, :_reduce_103,
  3, 123, :_reduce_104,
  3, 123, :_reduce_105,
  3, 123, :_reduce_106,
  3, 123, :_reduce_107,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 124, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  3, 125, :_reduce_113,
  3, 125, :_reduce_114,
  1, 125, :_reduce_none,
  3, 127, :_reduce_116,
  3, 127, :_reduce_117,
  1, 127, :_reduce_none,
  2, 128, :_reduce_119,
  1, 128, :_reduce_none,
  1, 130, :_reduce_none,
  1, 130, :_reduce_none,
  1, 130, :_reduce_none,
  3, 130, :_reduce_124,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  1, 133, :_reduce_none,
  1, 133, :_reduce_none,
  1, 134, :_reduce_129,
  3, 109, :_reduce_130,
  1, 109, :_reduce_none,
  1, 136, :_reduce_none,
  4, 132, :_reduce_133,
  1, 132, :_reduce_none,
  4, 137, :_reduce_135,
  4, 137, :_reduce_136,
  4, 137, :_reduce_137,
  4, 137, :_reduce_138,
  4, 137, :_reduce_139,
  1, 135, :_reduce_none,
  1, 135, :_reduce_none,
  3, 138, :_reduce_142,
  2, 138, :_reduce_143,
  2, 138, :_reduce_144,
  1, 138, :_reduce_145,
  3, 139, :_reduce_146,
  1, 140, :_reduce_none,
  1, 141, :_reduce_none,
  2, 142, :_reduce_149,
  1, 142, :_reduce_150,
  1, 129, :_reduce_151,
  1, 129, :_reduce_152,
  1, 74, :_reduce_153,
  3, 126, :_reduce_154,
  2, 126, :_reduce_155,
  1, 126, :_reduce_none,
  1, 143, :_reduce_none,
  2, 144, :_reduce_158 ]

racc_reduce_n = 159

racc_shift_n = 256

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :comma => 4,
  :unsigned_integer => 5,
  :ASC => 6,
  :DESC => 7,
  :left_paren => 8,
  :right_paren => 9,
  :INSERT => 10,
  :INTO => 11,
  :UPDATE => 12,
  :SET => 13,
  :equals_operator => 14,
  :DELETE => 15,
  :VALUES => 16,
  :SELECT => 17,
  :asterisk => 18,
  :AS => 19,
  :FROM => 20,
  :CROSS => 21,
  :JOIN => 22,
  :INNER => 23,
  :LEFT => 24,
  :OUTER => 25,
  :RIGHT => 26,
  :FULL => 27,
  :ON => 28,
  :USING => 29,
  :WHERE => 30,
  :GROUP => 31,
  :HAVING => 32,
  :NOT => 33,
  :BETWEEN => 34,
  :AND => 35,
  :IN => 36,
  :LIKE => 37,
  :IS => 38,
  :NULL => 39,
  :EXISTS => 40,
  :identifier => 41,
  :OR => 42,
  :not_equals_operator => 43,
  :less_than_operator => 44,
  :greater_than_operator => 45,
  :less_than_or_equals_operator => 46,
  :greater_than_or_equals_operator => 47,
  :plus_sign => 48,
  :minus_sign => 49,
  :solidus => 50,
  :CURRENT_USER => 51,
  :period => 52,
  :COUNT => 53,
  :AVG => 54,
  :MAX => 55,
  :MIN => 56,
  :SUM => 57,
  :E => 58,
  :quote => 59,
  :character_string_literal => 60,
  :DATE => 61,
  :date_string => 62 }

racc_nt_base = 63

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "UPDATE",
  "SET",
  "equals_operator",
  "DELETE",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "update_specification",
  "update_field_list",
  "where_clause",
  "update_field",
  "value_expression",
  "delete_specification",
  "from_clause",
  "in_column_list",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 21)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_9(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_19(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_20(val, _values, result)
     result = nil 
    result
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_23(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_25(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_32(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_40(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_48(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.racc', 128)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 60 omitted

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.racc', 138)
  def _reduce_62(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_65(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 161)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 164)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 169)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 172)
  def _reduce_77(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 78 omitted

module_eval(<<'.,.,', 'parser.racc', 179)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 180)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 183)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 191)
  def _reduce_84(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_85(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 86 omitted

# reduce 87 omitted

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.racc', 204)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 207)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

module_eval(<<'.,.,', 'parser.racc', 215)
  def _reduce_95(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

module_eval(<<'.,.,', 'parser.racc', 226)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 227)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 228)
  def _reduce_104(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 229)
  def _reduce_105(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 230)
  def _reduce_106(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 231)
  def _reduce_107(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.racc', 250)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 251)
  def _reduce_117(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 118 omitted

module_eval(<<'.,.,', 'parser.racc', 255)
  def _reduce_119(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

module_eval(<<'.,.,', 'parser.racc', 262)
  def _reduce_124(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

module_eval(<<'.,.,', 'parser.racc', 273)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 131 omitted

# reduce 132 omitted

module_eval(<<'.,.,', 'parser.racc', 283)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 134 omitted

module_eval(<<'.,.,', 'parser.racc', 287)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 290)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 291)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 140 omitted

# reduce 141 omitted

module_eval(<<'.,.,', 'parser.racc', 299)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 300)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 301)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 302)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_146(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 147 omitted

# reduce 148 omitted

module_eval(<<'.,.,', 'parser.racc', 314)
  def _reduce_149(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 315)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 318)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 319)
  def _reduce_152(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 323)
  def _reduce_153(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 327)
  def _reduce_154(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 328)
  def _reduce_155(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 156 omitted

# reduce 157 omitted

module_eval(<<'.,.,', 'parser.racc', 335)
  def _reduce_158(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
